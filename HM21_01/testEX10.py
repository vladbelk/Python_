
# Generated by CodiumAI

from HM21_01.ex10 import reverse_list

import unittest

class TestReverseList(unittest.TestCase):

    #  Returns a reversed list of integers when given a list of integers.
    def test_reversed_list_of_integers(self):
        # Arrange
        input_list = [1, 2, 3, 4, 5]
        expected_output = [5, 4, 3, 2, 1]

        # Act
        actual_output = reverse_list(input_list)

        # Assert
        self.assertEqual(actual_output, expected_output)

    #  Returns an empty list when given an empty list.
    def test_empty_list(self):
        # Arrange
        input_list = []
        expected_output = []

        # Act
        actual_output = reverse_list(input_list)

        # Assert
        self.assertEqual(actual_output, expected_output)

    #  Returns a list with a single integer when given a list with a single integer.
    def test_single_integer_list(self):
        # Arrange
        input_list = [5]
        expected_output = [5]

        # Act
        actual_output = reverse_list(input_list)

        # Assert
        self.assertEqual(actual_output, expected_output)

    #  Raises a TypeError when given a non-list argument.
    def test_non_list_argument(self):
        # Arrange
        input_list = "not a list"

        # Act and Assert
        self.assertRaises(TypeError, reverse_list, input_list)

    #  Raises a TypeError when given a list with non-integer elements.
    def test_non_integer_elements(self):
        # Arrange
        input_list = [1, 2, "3", 4, 5]

        # Act and Assert
        self.assertRaises(TypeError, reverse_list, input_list)

    #  Returns None when given None as an argument.
    def test_none_argument(self):
        # Arrange
        input_list = None

        # Act
        actual_output = reverse_list(input_list)

        # Assert
        self.assertIsNone(actual_output)
