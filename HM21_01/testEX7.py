# Generated by CodiumAI

from HM21_01.ex7 import calculate_sum

import unittest


class TestCalculateSum(unittest.TestCase):

    #  Returns the sum of a list of positive integers
    def test_positive_integers(self):
        # Arrange
        list_of_integers = [1, 2, 3, 4, 5]

        # Act
        result = calculate_sum(list_of_integers)

        # Assert
        self.assertEqual(result, 15)

    #  Returns the sum of a list of negative integers
    def test_negative_integers(self):
        # Arrange
        list_of_integers = [-1, -2, -3, -4, -5]

        # Act
        result = calculate_sum(list_of_integers)

        # Assert
        self.assertEqual(result, -15)

    #  Returns the sum of a list of mixed positive and negative integers
    def test_mixed_integers(self):
        # Arrange
        list_of_integers = [-1, 2, -3, 4, -5]

        # Act
        result = calculate_sum(list_of_integers)

        # Assert
        self.assertEqual(result, -3)

    #  Returns the correct sum when the list contains the maximum allowed integer value
    def test_maximum_integer(self):
        # Arrange
        list_of_integers = [2147483647, 1, 2, 3, 4, 5]

        # Act
        result = calculate_sum(list_of_integers)

        # Assert
        self.assertEqual(result, 2147483652)

    #  Returns the correct sum when the list contains the minimum allowed integer value
    def test_minimum_integer(self):
        # Arrange
        list_of_integers = [-2147483648, 1, 2, 3, 4, 5]

        # Act
        result = calculate_sum(list_of_integers)

        # Assert
        self.assertEqual(result, -2147483643)

    #  Returns the correct sum when the list contains both the maximum and minimum allowed integer values
    def test_maximum_and_minimum_integer(self):
        # Arrange
        list_of_integers = [2147483647, -2147483648, 1, 2, 3, 4, 5]

        # Act
        result = calculate_sum(list_of_integers)

        # Assert
        self.assertEqual(result, -2147483636)
