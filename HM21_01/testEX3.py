
# Generated by CodiumAI

from HM21_01.ex3 import count_primes

import unittest

class TestCountPrimes(unittest.TestCase):

    #  returns 0 when given an empty list
    def test_empty_list(self):
        lst = []
        result = count_primes(lst)
        self.assertEqual(result, 0)

    #  returns 0 when given a list of non-prime numbers
    def test_non_prime_numbers(self):
        lst = [4, 6, 8, 9, 10]
        result = count_primes(lst)
        self.assertEqual(result, 0)

    #  returns the correct count of prime numbers in a list of prime and non-prime numbers
    def test_mixed_numbers(self):
        lst = [2, 3, 4, 5, 6, 7, 8, 9, 10]
        result = count_primes(lst)
        self.assertEqual(result, 4)

    #  returns 0 when given a list of negative numbers
    def test_negative_numbers(self):
        lst = [-2, -3, -4, -5, -6]
        result = count_primes(lst)
        self.assertEqual(result, 0)

    #  returns 0 when given a list of 0 and 1
    def test_zero_and_one(self):
        lst = [0, 1]
        result = count_primes(lst)
        self.assertEqual(result, 0)

    #  returns the correct count of prime numbers in a list of large prime and non-prime numbers
    def test_large_numbers(self):
        lst = [99999989, 99999991, 99999992, 99999993, 99999994]
        result = count_primes(lst)
        self.assertEqual(result, 2)
