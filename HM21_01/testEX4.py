# Generated by CodiumAI

from HM21_01.ex4 import remove_number

import unittest


class TestRemoveNumber(unittest.TestCase):

    #  The function removes all occurrences of the given number from the list.
    def test_remove_all_occurrences(self):
        # Arrange
        list_of_integers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        number = 5

        # Act
        result = remove_number(list_of_integers, number)

        # Assert
        self.assertEqual(result, 1)
        self.assertNotIn(number, list_of_integers)

    #  The function returns 0 if the number is not in the list.
    def test_number_not_in_list(self):
        # Arrange
        list_of_integers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        number = 11

        # Act
        result = remove_number(list_of_integers, number)

        # Assert
        self.assertEqual(result, 0)
        self.assertEqual(list_of_integers, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10])

    #  The function returns the number of occurrences removed.
    def test_number_of_occurrences_removed(self):
        # Arrange
        list_of_integers = [1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10]
        number = 5

        # Act
        result = remove_number(list_of_integers, number)

        # Assert
        self.assertEqual(result, 2)
        self.assertNotIn(number, list_of_integers)

    #  The function works correctly when the list contains only one element and it is the given number.
    def test_single_element_is_given_number(self):
        # Arrange
        list_of_integers = [5]
        number = 5

        # Act
        result = remove_number(list_of_integers, number)

        # Assert
        self.assertEqual(result, 1)
        self.assertNotIn(number, list_of_integers)

    #  The function works correctly when the list contains only one element and it is not the given number.
    def test_single_element_is_not_given_number(self):
        # Arrange
        list_of_integers = [10]
        number = 5

        # Act
        result = remove_number(list_of_integers, number)

        # Assert
        self.assertEqual(result, 0)
        self.assertEqual(list_of_integers, [10])

    #  The function works correctly when the list contains multiple occurrences of the given number.
    def test_multiple_occurrences_of_given_number(self):
        # Arrange
        list_of_integers = [1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10]
        number = 5

        # Act
        result = remove_number(list_of_integers, number)

        # Assert
        self.assertEqual(result, 2)
        self.assertNotIn(number, list_of_integers)
