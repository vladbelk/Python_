
# Generated by CodiumAI

from HM21_01.ex8 import find_maximum

import unittest

class TestFindMaximum(unittest.TestCase):

    #  returns the maximum value from a list of positive integers
    def test_positive_integers(self):
        result = find_maximum([1, 2, 3, 4, 5])
        self.assertEqual(result, 5)

    #  returns the maximum value from a list of negative integers
    def test_negative_integers(self):
        result = find_maximum([-1, -2, -3, -4, -5])
        self.assertEqual(result, -1)

    #  returns the maximum value from a list of mixed positive and negative integers
    def test_mixed_integers(self):
        result = find_maximum([-1, 2, -3, 4, -5])
        self.assertEqual(result, 4)

    #  returns None when given an empty list
    def test_empty_list(self):
        result = find_maximum([])
        self.assertIsNone(result)

    #  raises a TypeError when given a list of non-integer values
    def test_non_integer_list(self):
        with self.assertRaises(TypeError):
            find_maximum([1, 2, '3', 4, 5])

    #  returns the maximum value from a list of integers with the maximum value at the beginning
    def test_maximum_at_beginning(self):
        result = find_maximum([5, 1, 2, 3, 4])
        self.assertEqual(result, 5)
